<?php
/**
 * @file
 * Install, update and uninstall functions for the content syndication module.
 */

/**
 * Implements hook_schema().
 */
function hhs_digital_media_syndication_schema() {
  $schema['hhs_digital_media_syndication_item'] = array(
    'description' => 'Stores HHS Digital Media Syndication Items.',
    'fields' => array(
      'iid'  => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique ID.',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Title of the syndication item.',
      ),
      'source' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Source of syndicated content',
      ),
      'from_date' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'Last modified date to search for content starting from.',
      ),
      'media_types' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Comma separated list of media types',
      ),
      'topics' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Comma separated list of topic unique ids',
      ),
      'media_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Selected media unique identifier for syndication',
      ),
      'syndication_url' => array(
        'type' => 'varchar',
        'length' => 1024,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Url from which to fetch syndicated content',
      ),
      'strip_images' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'boolean option to strip images from returned content',
      ),
      'strip_scripts' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'boolean option to strip scripts from returned content',
      ),
      'strip_anchors' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'boolean option to strip anchors from returned content',
      ),
      'strip_comments' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'boolean option to strip comments from returned content',
      ),
      'strip_inline_styles' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'boolean option to strip inline styles from returned content',
      ),
      'encoding' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Character encoding',
      ),
      'hide_title' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'boolean option to hide title if returned in syndicated markup',
      ),
      'hide_description' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'boolean option to hide description if returned in syndicated markup',
      ),
      'search_type' => array(
        'type' => 'int',
        'not null' => FALSE,
        'default' => '0',
        'description' => 'search type, either by metadata or url',
      ),
      'search_url' => array(
        'type' => 'varchar',
        'length' => 1000,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Url selected in search by url field',
      ),
      'strip_breaks' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'boolean option to strip line breaks from returned content',
      ),
      'image_float' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => FALSE,
        'default' => '',
        'description' => 'CSS float option for images in returned html content',
      ),
      'css_classes' => array(
        'type' => 'varchar',
        'length' => 1024,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Comma separated list of CSS classes.  Only content within elements with these classes will be returned.',
      ),
      'element_ids' => array(
        'type' => 'varchar',
        'length' => 1024,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Comma separated list of element Ids.  Only content within elements with these Ids will be returned.',
      ),
      'xpath' => array(
        'type' => 'varchar',
        'length' => 1024,
        'not null' => FALSE,
        'default' => '',
        'description' => 'An xpath statement defining what should be retrieved from the content.',
      ),
      'namespace' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Used to decorate (prefix) the tags and ids in the results to prevent conflict with existing host page elements.',
      ),
      'links_same_window' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'boolean option for links to open in same window (default is new window)',
      ),
      'width' => array(
        'type' => 'varchar',
        'length' => 8,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Set the width of various media types',
      ),
      'height' => array(
        'type' => 'varchar',
        'length' => 8,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Set the height of various media types',
      ),
      'https' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'If true the calls to the source to fetch the content for embedding will use https rather than http.',
      ),
    ),
    'primary key' => array('iid'),
    'unique keys' => array(
      'title' => array('title'),
    ),
  );

  return $schema;
}

function hhs_digital_media_syndication_update_7200() {
  $ret = array();
  db_add_field('hhs_digital_media_syndication_item', 'search_type', array(
    'type' => 'int',
    'not null' => FALSE,
    'default' => '0',
    'description' => 'search type, either by metadata or url',
  ));
  db_add_field('hhs_digital_media_syndication_item', 'search_url', array(
    'type' => 'varchar',
    'length' => 1000,
    'not null' => FALSE,
    'default' => '',
    'description' => 'Url selected in search by url field',
  ));
  return $ret;
}
function hhs_digital_media_syndication_update_7201() {
  $ret = array();
  db_add_field('hhs_digital_media_syndication_item', 'strip_breaks', array(
    'type' => 'int',
    'not null' => FALSE,
    'description' => 'boolean option to strip line breaks from returned content',
  ));
  db_add_field('hhs_digital_media_syndication_item', 'image_float', array(
    'type' => 'varchar',
    'length' => 32,
    'not null' => FALSE,
    'default' => '',
    'description' => 'CSS float option for images in returned html content',
  ));
  db_add_field('hhs_digital_media_syndication_item', 'css_classes', array(
    'type' => 'varchar',
    'length' => 1024,
    'not null' => FALSE,
    'default' => '',
    'description' => 'Comma separated list of CSS classes.  Only content within elements with these classes will be returned.',
  ));
  db_add_field('hhs_digital_media_syndication_item', 'element_ids', array(
    'type' => 'varchar',
    'length' => 1024,
    'not null' => FALSE,
    'default' => '',
    'description' => 'Comma separated list of element Ids.  Only content within elements with these Ids will be returned.',
  ));
  db_add_field('hhs_digital_media_syndication_item', 'xpath', array(
    'type' => 'varchar',
    'length' => 1024,
    'not null' => FALSE,
    'default' => '',
    'description' => 'An xpath statement defining what should be retrieved from the content.',
  ));
  db_add_field('hhs_digital_media_syndication_item', 'namespace', array(
    'type' => 'varchar',
    'length' => 128,
    'not null' => FALSE,
    'default' => '',
    'description' => 'Used to decorate (prefix) the tags and ids in the results to prevent conflict with existing host page elements.',
  ));
  db_add_field('hhs_digital_media_syndication_item', 'links_same_window', array(
    'type' => 'int',
    'not null' => FALSE,
    'description' => 'boolean option for links to open in same window (default is new window)',
  ));
  db_add_field('hhs_digital_media_syndication_item', 'width', array(
    'type' => 'varchar',
    'length' => 8,
    'not null' => FALSE,
    'default' => '',
    'description' => 'Set the width of various media types',
  ));
  db_add_field('hhs_digital_media_syndication_item', 'height', array(
    'type' => 'varchar',
    'length' => 8,
    'not null' => FALSE,
    'default' => '',
    'description' => 'Set the height of various media types',
  ));
  db_add_field('hhs_digital_media_syndication_item', 'https', array(
    'type' => 'int',
    'not null' => FALSE,
    'description' => 'If true the calls to the source to fetch the content for embedding will use https rather than http.',
  ));
  return $ret;  
}
